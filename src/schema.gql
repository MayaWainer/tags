# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

interface TagConfiguration {
  id: Int!
  name: String!
  type: TagConfigurationType!
  allowMultiple: Boolean!
  applyTo: [TaggableEntities!]!
}

enum TagConfigurationType {
  ValueList
  Number
  String
}

enum TaggableEntities {
  Expense
  Card
}

type Tag {
  name: String!
  configurationId: Float!
  values: [String!]!
}

type Expense implements Taggable {
  tags: [Tag!]!
  id: Int!
  amountInCardCurrency: Float!
  conversionRate: Float!
  merchantName: String!
  createdAt: String!
}

interface Taggable {
  tags: [Tag!]!
}

type Card implements Taggable {
  tags: [Tag!]!
  id: Int!
  nameOnCard: String!
}

type ValueListConfiguration implements TagConfiguration {
  id: Int!
  name: String!
  type: TagConfigurationType!
  allowMultiple: Boolean!
  applyTo: [TaggableEntities!]!
  valueList(valueListPagination: OffsetPaginationInput = {offset: 0, limit: 20}): [String!]!
}

input OffsetPaginationInput {
  offset: Int!
  limit: Int!
}

type StringConfiguration implements TagConfiguration {
  id: Int!
  name: String!
  type: TagConfigurationType!
  allowMultiple: Boolean!
  applyTo: [TaggableEntities!]!
  charCount: Float!
}

type NumberConfiguration implements TagConfiguration {
  id: Int!
  name: String!
  type: TagConfigurationType!
  allowMultiple: Boolean!
  applyTo: [TaggableEntities!]!
  min: Float!
  max: Float!
}

type Query {
  getExpense(id: Float!): Expense!
  getAllExpenses: [Expense!]!
  getTagConfiguration(id: Float!): TagConfiguration!
  getAllTagConfigurations(pagination: OffsetPaginationInput = {offset: 0, limit: 20}, sorting: ConfigSort, filter: ConfigFilter): [TagConfiguration!]!
  getCard(id: Float!): Card!
  getAllCards: [Card!]!
}

input ConfigSort {
  sortBy: ConfigSortKey!
  sortDirection: SortDirection! = ASC
}

enum ConfigSortKey {
  id
}

enum SortDirection {
  ASC
  DESC
}

input ConfigFilter {
  ids: [Int!]
}

type Mutation {
  tagResource(input: TagResourceInput!): TaggedEntity!
  createTagConfiguration(input: CreateTagConfigurationInput!): TagConfiguration!
}

union TaggedEntity = Expense | Card

input TagResourceInput {
  configurationId: Int!
  values: [String!]!
  entity: TaggableEntities!
  entityId: Float!
}

input CreateTagConfigurationInput {
  name: String!
  allowMultipleValues: Boolean!
  taggableEntities: [TaggableEntities!]!
  type: TagConfigurationType!
  valueListTagConfig: ValueListTagConfigInput
  stringTagConfig: StringTagConfigInput
  numberTagConfig: NumberTagConfigInput
}

input ValueListTagConfigInput {
  values: [String!]!
}

input StringTagConfigInput {
  charCount: Float!
}

input NumberTagConfigInput {
  min: Float!
  max: Float!
}